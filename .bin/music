#! /usr/bin/env bash

# mpc status
if [[ $(mpc status | grep -c "playing" ) == 1 ]]; then
    mStatus="playing"
else
    mpcStatus="paused"
fi

# next song on the actual player
function next() {
	if [[ $mStatus == "playing" ]]; then
	    mpc next
	    ~/.bin/music cover
	else
	    playerctl next
	fi
}

# next song on the actual player
function prev() {
	if [[ $mStatus == "playing" ]]; then
	    mpc prev
	    ~/.bin/music cover
	else
	    playerctl previous
	fi
}

#get polybar
# get current focused windows id
currentWindowsFocus=$(xdotool getmouselocation --shell | grep WINDOW | awk -F "=" '{print $2}')
# polybar id
polybarId=$(xdotool search -class Polybar | tail -1)

function toggle() {
    if [[ !($currentWindowsFocus == $polybarId ) ]]; then
        playerctl play-pause
    else
        mpc toggle
    fi
}

status=$(wmctrl -l | grep 'miniplayer-ncmpcpp' -c)

function miniplayer() {
    if [[ $status == 0 ]]; then
        kitty --title=miniplayer-ncmpcpp -e 'ncmpcpp'
    else
        wmctrl -c miniplayer-ncmpcpp
    fi
}

MUSIC_DIR=~/Music/ # Your music directory
COVERCACHE=/tmp/COVERCACHE.jpg

function cover() {
    album="$(mpc --format %album% current -p 6600)" # Your Port
    file="$(mpc --format %file% current -p 6600)"
    album_dir="${file%/*}"
    [[ -z "$album_dir" ]] && exit 1
    album_dir="$MUSIC_DIR/$album_dir"

    # Generate album
    song="$(find "$album_dir" -type d -exec find {} -maxdepth 1 -type f -iregex ".*/.*\(${album}\).*[.]\(mp3\)" \;)"
    src2="$(echo -n "$song" | head -n1)"

    if [[ $song < 1 ]]; then
        if [[ -n "$src2" ]]; then
            ffmpeg -i "$src2" "$album_dir/COVERCACHE.jpg"
        fi
    fi

    COVERCACHEs="$(find "$album_dir" -type d -exec find {} -maxdepth 1 -type f -iregex ".*/.*\(${album}\|COVERCACHE\|folder\|artwork\|front\).*[.]\(jpe?g\|png\|gif\|bmp\)" \;)"
    src="$(echo -n "$COVERCACHEs" | head -n1)"
    rm -f "$COVERCACHE"

    # For Notifications
    if [[ -n "$src" ]]; then
        # Resize the image's width to 64px
        convert "$src" -resize 64x "$COVERCACHE"
        if [[ -f "$COVERCACHE" ]]; then
            pkill dunst
            notify-send -u normal -i ${COVERCACHE} " Now Playing" "$(mpc current)"
        fi
    else
        pkill dunst
        notify-send -u normal " Now Playing" "$(mpc current)"

    fi
}

case "$1" in
prev)
    prev
    ;;
next)
    next
    ;;
status)
    status
    ;;
toggle)
    toggle
    ;;
miniplayer)
    miniplayer
    ;;
cover)
    cover
    ;;
*)
    notify-send 'Use music next or music prev.'
    ;;
esac
